plugins {
    id 'kotlinx-serialization'
}
apply from: "$rootDir/buildsystem/android-library.gradle"

android {
    buildTypes {
        Properties properties = new Properties()
        properties.load(project.rootProject.file("local.properties").newDataInputStream())
        release {
            buildConfigField("String", "API_KEY", System.getenv("api_key") ?:"\"${properties.getProperty("api_key")}\"")
            buildConfigField "String", "BASE_URL", "\"https://pixabay.com/\""
        }
        debug {
            buildConfigField("String", "API_KEY", System.getenv("api_key") ?:"\"${properties.getProperty("api_key")}\"")
            buildConfigField "String", "BASE_URL", "\"https://pixabay.com/\""
        }
        UITest {
            buildConfigField("String", "API_KEY", "\"${properties.getProperty("api_key")}\"")
            buildConfigField "String", "BASE_URL", "\"https://pixabay.com/\""
        }
    }
}

dependencies {
    def commonDependencies = rootProject.ext.commonDependencies
    implementation commonDependencies.androidx.appcompat
    //navigation
    implementation commonDependencies.androidx.navigationFragment
    implementation commonDependencies.androidx.navigationKtx
    implementation commonDependencies.google.material
    implementation commonDependencies.jetbrains.coroutine
    implementation commonDependencies.other.adapterDelegates
    implementation commonDependencies.jetbrains.kotlinSerialization
    implementation commonDependencies.other.retrofitKotlinSerializationConverter
    implementation commonDependencies.other.retrofit2
    implementation commonDependencies.other.okHttp
    implementation commonDependencies.other.okHttpInterceptor
    // devtool
    def developmentDependencies = rootProject.ext.developmentDependencies
    debugImplementation developmentDependencies.chucker
    releaseImplementation developmentDependencies.chuckNoOp
}